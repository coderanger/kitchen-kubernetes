#
# Copyright 2017, Noah Kantrowitz
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

apiVersion: v1
kind: Pod
metadata:
  name: <%= pod_id %>
  labels:
    heritage: kitchen-kubernetes
  annotations:
    coderanger.net/kitchen-instance: <%= instance.name %>
    coderanger.net/kitchen-platform: <%= instance.platform.name %>
    coderanger.net/kitchen-created-by: <%= Etc.getlogin || 'unknown' %>
    coderanger.net/kitchen-created-on: <%= Socket.gethostname %>
spec:
  initContainers:
  - name: chef
    image: <%= config[:chef_image] %>:<%= config[:chef_version] %>
    <%- if config[:chef_version] == 'latest' -%>
    command: ["/bin/cp", "-a", "-u", "/opt/chef", "/mnt"]
    <%- else -%>
    command: ["/bin/sh", "-c", "if [ ! -d /mnt/chef/bin ]; then cp -a /opt/chef /mnt; fi"]
    <%- end -%>
    volumeMounts:
    - mountPath: /mnt/chef
      name: chef
  containers:
  - name: default
    image: <%= config[:image] %>
    <%- if config[:image_pull_policy] %>
    imagePullPolicy: <%= config[:image_pull_policy] %>
    <%- end -%>
    resources:
      requests:
        <%- if config[:cpu_requests] -%>
        cpu: "<%= config[:cpu_requests] %>"
        <%- end -%>
        <%- if config[:memory_requests] -%>
        memory: "<%= config[:memory_requests] %>"
        <%- end -%>
      limits:
        <%- if config[:cpu_limit] -%>
        cpu: "<%= config[:cpu_limit] %>"
        <%- end -%>
        <%- if config[:memory_limit] -%>
        memory: "<%= config[:memory_limit] %>"
        <%- end -%>
    <%- if config[:init_system] == 'systemd' -%>
    env:
    - name: container
      value: docker
    command: ["/sbin/init"]
    <%- else -%>
    command: ["/bin/sh", "-c", "trap 'exit 0' TERM; sleep 2147483647 & wait"]
    <%- end -%>
    volumeMounts:
    - mountPath: /opt/chef
      name: chef
    - mountPath: /tmp/kitchen
      name: kitchen
    <%- if config[:init_system] == 'systemd' -%>
    - mountPath: /tmp
      name: systemd-tmp
    - mountPath: /run
      name: systemd-run
    - mountPath: /run/lock
      name: systemd-lock
    - mountPath: /sys/fs/cgroup
      name: systemd-cgroup
      readOnly: true
    <%- end -%>
  - name: rsync
    image: <%= config[:rsync_image] %>
    volumeMounts:
    - mountPath: /tmp/kitchen
      name: kitchen
  volumes:
  - <%= {name: 'chef'}.merge(config[:cache_volume]).to_json %>
  - name: kitchen
    emptyDir: {}
  <%- if config[:init_system] == 'systemd' -%>
  - name: systemd-tmp
    emptyDir:
      medium: Memory
  - name: systemd-run
    emptyDir:
      medium:
  - name: systemd-lock
    emptyDir:
      medium: Memory
  - name: systemd-cgroup
    hostPath:
      path: /sys/fs/cgroup
      type: Directory
  <%- end -%>
  <%- if config[:image_pull_secrets] -%>
  imagePullSecrets: <%= Array(config[:image_pull_secrets]).map {|n| {name: n} }.to_json %>
  <%- end -%>
